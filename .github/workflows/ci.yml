name: CI and Deploy
on:
  push:
    branches:
      - main
  pull_request:
permissions:
  actions: read
  contents: read
  pages: write
  id-token: write

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - name: Get Date
        id: get-date
        run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
      - uses: actions/cache/restore@v4
        id: cache
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ steps.get-date.outputs.date }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ steps.get-date.outputs.date }}-
            ${{ runner.os }}-node-
      - name: Install Dependencies
        run: npm ci --legacy-peer-deps
      - uses: nrwl/nx-set-shas@v4
      - run: npx nx-cloud start-ci-run --distribute-on="3 linux-medium-js" --stop-agents-after="build"
      - run: npx nx affected -t lint test build
      - uses: actions/cache/save@v4
        if: always()
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ steps.get-date.outputs.date }}-${{ hashFiles('**/package-lock.json') }}

  deploy:
    needs: main
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - uses: actions/cache/restore@v4
        id: cache
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ steps.get-date.outputs.date }}-${{ hashFiles('**/package-lock.json') }}
      - name: Install Dependencies
        run: npm ci --legacy-peer-deps
      - name: Build the app
        run: npx nx build demo-app --baseHref "/ng-gc-ws/"
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Upload artifact to GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist/apps/demo-app'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  e2e:
    needs: [deploy]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - uses: actions/cache/restore@v4
        id: cache
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ steps.get-date.outputs.date }}-${{ hashFiles('**/package-lock.json') }}
      - name: Install Dependencies
        run: npm ci --legacy-peer-deps
      - name: Install Playwright
        run: npx playwright install --with-deps
      - name: Run e2e tests
        run: CI=true && npx nx e2e demo-app-e2e